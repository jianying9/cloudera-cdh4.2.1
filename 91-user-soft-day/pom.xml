<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.wolf</groupId>
        <artifactId>cloudera-cdh4.2.1</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <groupId>com.wolf</groupId>
    <artifactId>91-user-soft-day</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>91-user-soft-day</name>
    <url>http://maven.apache.org</url>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <dependencies>
        <!--内部包-->
        <dependency>
            <groupId>com.wolf</groupId>
            <artifactId>91-user-soft-utils</artifactId>
        </dependency>
        <!--第三方包-->
        <dependency>
            <groupId>org.apache.mrunit</groupId>
            <artifactId>mrunit</artifactId>
            <classifier>hadoop2</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-common</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <!--如果需要引入hadopp,hbase运行环境没有的第三方包，可以使用assembly打包插件打包-->
            <!--1、注意assembly.xml路径的设置，默认和当前maven工程pom.xml同路径-->
            <!--2、可以设置mainClass属性，这样在hadoop jar执行job时，可以免去制定mian函数的步骤，建议统一main函数命名，方便管理-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <descriptors>
                        <descriptor>assembly.xml</descriptor>
                    </descriptors>
                    <archive>
                        <manifest>
                            <mainClass>com.nd.mapred.JobStart</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <reporting>
        <outputDirectory>../target/site/91-user-soft-day</outputDirectory>
    </reporting>
    <profiles>
        <profile>
            <id>server</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <inputPath>/user/nineone/91_store/daily_snapshot/Software_20130802</inputPath>
                <tableName>ljy_InstalledAppList</tableName>
                <loadFactor>1</loadFactor>
                <distance>0</distance>
            </properties>
        </profile>
        <profile>
            <id>test</id>
            <properties>
                <inputPath>/user/liujianying/91day</inputPath>
                <tableName>ljy_InstalledAppList</tableName>
                <loadFactor>45</loadFactor>
                <distance>0</distance>
            </properties>
        </profile>
    </profiles>
</project>
